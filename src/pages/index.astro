---
import PlotFigure from "../components/PlotFigure.astro";
import Layout from "../layouts/Layout.astro";
import medecins from "../assets/medecins_propres.json";
import departements from "../assets/departements.geojson.json";


let dpt = departements.features[Math.floor(Math.random() * departements.features.length)]?.properties?.nom ?? "Paris";
const search = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${dpt}`)
.then(response => response.json());
const lat = search?.results?.[0]?.latitude ?? 0;
const long = search?.results?.[0]?.longitude ?? 0;
console.log(search, long, lat);



let input = "";
let suggestions = [];
const handleSearch = ((e)=>{
  input += e.target.value;
})
---

<!-- str.normalize("NFD").replace(/[\u0300-\u036f]/g, ""); -->

<Layout>
  <div class="flex">
    <div class="grid grid-cols-3 *:h-fill grow-3">
      <div class="bg-(--coloc-Black) rounded-xl md:rounded-2xl p-4 md:p-6 col-span-2 ">
          <p class="text-gray-400 text-xs md:text-sm mb-2">Humidité</p>
          <p class="text-xl md:text-2xl font-bold">46%</p>
      </div>
      <div class="bg-(--coloc-Black) rounded-xl md:rounded-2xl p-4 md:p-6">
          <p class="text-gray-400 text-xs md:text-sm mb-2">Humidité</p>
          <p class="text-xl md:text-2xl font-bold">46%</p>
      </div>
      <div class="bg-(--coloc-Black) rounded-xl md:rounded-2xl p-4 md:p-6 col-span-3">
          <p class="text-gray-400 text-xs md:text-sm mb-2">Humidité</p>
          <p class="text-xl md:text-2xl font-bold">46%</p>
      </div>
      <div class="bg-(--coloc-Black) rounded-xl md:rounded-2xl p-4 md:p-6 ">
          <p class="text-gray-400 text-xs md:text-sm mb-2">Humidité</p>
          <p class="text-xl md:text-2xl font-bold">46%</p>
      </div>
      <div class="bg-(--coloc-Black) rounded-xl md:rounded-2xl p-4 md:p-6 col-span-2">
          <p class="text-gray-400 text-xs md:text-sm mb-2">Humidité</p>
          <p class="text-xl md:text-2xl font-bold">46%</p>
      </div>
    </div>
    <div>
      <div class="*:mx-2 *:rounded-lg">
        <input 
        onchange={(e) => handleSearch(e)}
        type="text"
        class="bg-(--color-White)">
        <button class="p-2 bg-(--coloc-Black)">Rechercher</button>
      </div>
      <div 
      class="grow-2"
        id="plot-container"
        data-medecins={JSON.stringify(medecins)}
        data-departements={JSON.stringify(departements)}
      ></div>
    </div>
  </div>
</Layout>

<script>
  import * as Plot from "@observablehq/plot";
  
  const container = document.querySelector("#plot-container");
  const medecins = JSON.parse(container.dataset.medecins);
  const departements = JSON.parse(container.dataset.departements);
  
  const plot = Plot.plot({
    title: `Carte de France Montrant le nombre de médecins par département`,
    height: 500,
    width: 500,
    projection: {
      type: "mercator",
      domain: departements
    },
    color: {
      type: "linear",
      scheme: "blues",
      label: "Médecins pour 100 000 habitants",
      legend: true
    },
    marks: [
      Plot.geo(departements, {
        fill: (d) => {
          const nomDepartement = d.properties.nom;
          const medData = medecins.find(
            (med) => med.Departement === nomDepartement
          );
          return medData?.PourCent;
        },
        stroke: "black",
        strokeWidth: 0.2,
        tip: {
          format: { x: false, y: false },
          content: (d) => {
            const nomDepartement = d.properties.nom;
            const medData = medecins.find(
              (med) => med.Departement === nomDepartement
            );
            if (!medData) return `Département: ${nomDepartement}\nDonnées non disponibles`;
            return `Département: ${nomDepartement}\nMédecins: ${medData.Nombre}`;
          }
        }
      })
    ]
  });
  
  container.append(plot);
</script>

<style>
  :global(svg g[aria-label^="tip"] text) {
    fill: black !important;
  }